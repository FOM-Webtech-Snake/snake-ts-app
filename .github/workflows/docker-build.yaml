name: Build and Push Docker Image

# Trigger the workflow on push to specific branches or when a tag is created.
on:
  push:
    branches:
      - 'main'
      - 'fabian-build-optimization'
    tags:
      - 'v*'  # Match version tags like v1.0, v1.1.1, etc.

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Determine the version
      - name: Determine version
        id: version
        run: |
          if [[ "${GITHUB_REF}" =~ ^refs/tags/v(.+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            LATEST="true"
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            VERSION="main-${GITHUB_RUN_NUMBER}"
            LATEST="false"
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            VERSION="${BRANCH_NAME}-SNAPSHOT"
            LATEST="false"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}

      # Step 4: Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker buildx create --use
          if [ "${{ env.LATEST }}" = "true" ]; then
            docker buildx build --platform linux/amd64,linux/arm64 \
              --build-arg APP_VERSION=${{ env.VERSION }} \
              -t ghcr.io/fom-webtech-snake/snake-ts-app:${{ env.VERSION }} \
              -t ghcr.io/fom-webtech-snake/snake-ts-app:latest \
              --push .
          else
            docker buildx build --platform linux/amd64,linux/arm64 \
              --build-arg APP_VERSION=${{ env.VERSION }} \
              -t ghcr.io/fom-webtech-snake/snake-ts-app:${{ env.VERSION }} \
              --push .
          fi